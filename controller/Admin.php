<?php

/**
 *Класс на входе получает метод и обрабатывает входные данные, передает в базу и анализирует ответ,
 *  в случае верного ответа из базы загружает страницу для зарегистрированных пользователей
 * в противном случае загружает страницу авторизации
 */

class Admin{
/**
 * вызываем метод проверки  пользователя на предмет регистрации
 */
private $count;    
    function verify(){
 //echo 'In isUser()' ;
         //Получаем IP из массова SERVER
        $ip = $_SERVER['REMOTE_ADDR']; 
 echo 'IP - '.$ip.'<br>';       
     /*проверяем массивы POST[] и GET[]*/   
         if(isset($_POST['user']) & isset($_POST['password'])
             & !empty($_POST['user']) & !empty($_POST['password'])){
/*Проверяем содержимое массива POST[] на предмет наличия непозволительных символов*/   
        $name = htmlspecialchars($_POST['user']);
        $name = trim($name);
        $password = htmlspecialchars($_POST['password']);
        $pasword = trim($password);
//echo 'name -'.$name.'  password - '.$password;        
        $db = new DB_connect;
 /*Проверяем есть ли бан на текущее IP*/
        $bun = $db->permit($ip);
 echo 'permit - '.$bun.'<br>';       
        if($bun == 'false'){
 /*сравниваем текущее время со времененем зафиксированным в базе 
если время в базе больше чем текущее то бан все еще работает а если 
  * наоборот то бан закончился и можно продолжить попытки входа  */
           $endTime = $db->getEndTime($ip);//получаем время бана
           $now = @mktime();//текущее время
           $res = $endTime - $now;//разница
 echo'endTime - '.$endTime.' , текущее - '.$now. ' , Разница - '.$res;          
                if($res < 0){//бан можно прекращать
                    $db->license($ip);//снимаем бан

                }else{            
echo'bun-1';               // header("Location:view/bun.php");
                }
        }
        
        $is_us = $db->is_user($name, $password);
        /*если такой пользлователь в базе есть переходим на страницу админа*/
                if($is_us){
                    require'view/secret_page.php';
                    return true;
                }else{
           /*Если входные данные не верны то занести IP в базу и начать подсчитвать попытки
           войти в админку ро данному IP */         
             //считаем попытки                    
                $attempt = $db->num_attempt($ip);
 echo'(In admin) attempt = '.$attempt;               
             /*если попыток больше 5 то на 3 минуты баним IP*/   
                if($attempt > 5){
             /*Передаем false в таблицу counter и с этого момента ip не проходит в базу
              *  Фиксирум время начала бана в базе данных*/
                     $db->bun($ip);// передаем false
                    $db->setEndTime($ip);//запускаем время бана
 echo'bun-2';                    //header("Location:view/bun.php");
                }               
                    ob_start();
                    $msg = 'Неверный логин или пароль';
                    require'view/message.php';
                    $message = ob_get_contents();
                    require'view/login_page.php';
                    return false;
                }
                
       /*Если массив POST[] пустой то снова загрузить форму с предупреждающим сообщением */         
        }else{
            
             ob_start();
            $msg = 'Для входа в админку заполните форму.Поля не должны быть пустыми';
             require'view/message.php';
            $message = ob_get_contents();
            ob_end_flush(); 
            
        require'view/login_page.php';
        }
        
    }
 
/**
 * метод регистрации пользователей
 * */
    function registration(){
         /*Проверяем содержимое массива POST[] на предмет наличия непозволительных символов*/   
        $name = htmlspecialchars($_POST['user']);
        $name = trim($name);
        $password = htmlspecialchars($_POST['password']);
        $pasword = trim($password);
 //echo 'name -'.$name.'  password - '.$password;           
        $db = new DB_connect;
    /*есть ли пользователь в базе*/  
         If($db->is_user($name, $password)){
         
             ob_start();
             $msg ='Пользователь с такими данными уже зарегистрирован';
             require'view/message.php';
   // echo $msg;         
             $message = ob_get_contents();
             ob_end_flush(); 
             require'view/login_page.php';     
             return;
         }  
         
//foreach($_POST as $k => $v)   echo $k.' - '.$v.'<br>';
    /**/       
        $registr = $db->user_input($name, $password);
        if($registr){
             ob_start();
             $msg ='Данные успешно внесены, можно вводить и входить..';
             require'view/message.php';
             $message = ob_get_contents();
             ob_end_flush(); 
             require'view/login_page.php';
        }else{
            echo'Неудача, не удалось внести данные';
        }
        return $registr;
    }
    
  /*обращаемся к базе данных для проверки бана*/
    function protection($ip){
      $db = new DB_connect;
      
        
    }
    
}