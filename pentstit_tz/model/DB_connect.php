<?php

/** 
 * Соединение с базой данных, шифрования паролей используем функцию sha1()
 */
class DB_connect{
    
    static $dbh = null;
    
     static function getDbh(){
        if(self::$dbh == null) {
            try{
                $dbh = "mysql:host=localhost;dbname=users_data";
                 self:: $dbh = new Pdo($dbh, 'root', 'serj0531serj');
                 self:: $dbh->exec("SET NAMES utf8");
                 return self::$dbh;
                }catch(PDOException $e) {
                echo $e->getMessage();
                }
        }else{
            return self::$dbh;
        }
    }
    
/**
*метод проверяющий есть ли поступившие из массива POST[] данные в базе
*/    
   public function is_user(){
        $name = $_POST['user'];
        $name = trim($name);
        $password = $_POST['password'];
        $pasword = trim($password);
 //echo 'password = '.$password.'<br>';       
       $dbh = self::getDbh();
       $sq = 'SELECT * FROM users  WHERE  password=:password and name=:name';
        $sth = $dbh->prepare($sq);
        $sth->execute([':password' => sha1($password), ':name' => $name]);
  // var_dump($sth);            
        $res = $sth->fetchAll(PDO::FETCH_ASSOC);
 
        return $res;
    }
    
/**
*метод заносящий пользователя в базу данных
 *  */    
    public function user_input(){
        $name = $_POST['user'];
        $name = trim($name);
        $password = $_POST['password'];
        $password = trim($password);
        $dbh = self::getDbh();
        $sq = 'INSERT INTO users( name, password) values(:name, :password)';
        $sth = $dbh->prepare($sq);
        //возвращает количество затронутых строк
        $sth->execute([':name' => $name, ':password' => sha1($password)]);
        return $dbh->lastInsertId();	
        //return($sth->fetchAll(PDO::FETCH_ASSOC));
        
    }
}

